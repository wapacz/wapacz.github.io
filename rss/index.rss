<rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:media="http://search.yahoo.com/mrss/" version="2.0"><channel><title>w@pache</title><description>IT thoughts, stories and ideas</description><link>http://localhost:2368/</link><image><url>http://localhost:2368/favicon.png</url><title>w@pache</title><link>http://localhost:2368/</link></image><generator>Ghost 2.6</generator><lastBuildDate>Wed, 21 Nov 2018 23:32:35 GMT</lastBuildDate><atom:link href="http://localhost:2368/rss/" rel="self" type="application/rss+xml"/><ttl>60</ttl><item><title>Boosted Enum</title><description>&lt;p&gt;Usage:&lt;/p&gt;&lt;pre&gt;&lt;code class="language-java"&gt;package org.catcher.example.boostedenum;

import org.catcher.example.boostedenum.some.SomeRepository;
import org.catcher.example.boostedenum.some.SomeService;

import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.when;

public class Main {

    public static void main(String[] args) {

        SomeRepository repo = mock(SomeRepository.class);
        when(repo.getFactor()).thenReturn(&lt;/code&gt;&lt;/pre&gt;</description><link>http://localhost:2368/untitled-2/</link><guid isPermaLink="false">5bf5e8b7b7b9b605c6486e19</guid><dc:creator>Michał Łapacz</dc:creator><pubDate>Thu, 25 Oct 2018 14:50:48 GMT</pubDate><content:encoded>&lt;p&gt;Usage:&lt;/p&gt;&lt;pre&gt;&lt;code class="language-java"&gt;package org.catcher.example.boostedenum;

import org.catcher.example.boostedenum.some.SomeRepository;
import org.catcher.example.boostedenum.some.SomeService;

import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.when;

public class Main {

    public static void main(String[] args) {

        SomeRepository repo = mock(SomeRepository.class);
        when(repo.getFactor()).thenReturn(5);

        SomeService service = new SomeService(repo);

        System.out.println(service.compute(SomeService.Type.REGULAR, 2));
        System.out.println(service.compute(SomeService.Type.SPECIAL, 2));
        System.out.println(service.compute(SomeService.Type.SOMETHING, 2));

    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Example of SomeService class:&lt;/p&gt;&lt;pre&gt;&lt;code class="language-java"&gt;package org.catcher.example.boostedenum.some;

import java.util.function.BiFunction;

public class SomeService {

    public enum Type {

        REGULAR(SomeService::computeRegular),
        SPECIAL(SomeService::computeSpecial),
        SOMETHING(SomeService::computeSomething);

        private final BiFunction&amp;lt;SomeService, Integer, Integer&amp;gt; algorithm;

        public BiFunction&amp;lt;SomeService, Integer, Integer&amp;gt; getAlgorithm() {
            return this.algorithm;
        }

        Type(BiFunction&amp;lt;SomeService, Integer, Integer&amp;gt; algorithm) {
            this.algorithm = algorithm;
        }
    }

    private final SomeRepository repo;

    public SomeService(SomeRepository repo) {
        this.repo = repo;
    }

    public int compute(Type type, int data) {
        return type.getAlgorithm().apply(this, data);
    }

    int computeRegular(int data) {
        return data * repo.getFactor();
    }

    int computeSpecial(int data) {
        return data * 6;
    }

    int computeSomething(int data) {
        return data * 2;
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Repo:&lt;/p&gt;&lt;pre&gt;&lt;code class="language-java"&gt;package org.catcher.example.boostedenum.some;

public interface SomeRepository {
    int getFactor();
}
&lt;/code&gt;&lt;/pre&gt;
</content:encoded></item><item><title>Python environment</title><description>&lt;p&gt;Install python and pip&lt;/p&gt;&lt;pre&gt;&lt;code&gt;# Python 2
sudo apt-get install python
sudo apt-get install python-pip

# Python 3
sudo apt-get install python3
sudo apt-get install python3-pip
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Install pipenv&lt;/p&gt;&lt;pre&gt;&lt;code&gt;pip3 install pipenv&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Install virtualenv&lt;/p&gt;&lt;pre&gt;&lt;code&gt;pip3 install virtualenv&lt;/code&gt;&lt;/pre&gt;</description><link>http://localhost:2368/python-environment/</link><guid isPermaLink="false">5bf5e8b7b7b9b605c6486e18</guid><dc:creator>Michał Łapacz</dc:creator><pubDate>Thu, 18 Oct 2018 13:37:56 GMT</pubDate><content:encoded>&lt;p&gt;Install python and pip&lt;/p&gt;&lt;pre&gt;&lt;code&gt;# Python 2
sudo apt-get install python
sudo apt-get install python-pip

# Python 3
sudo apt-get install python3
sudo apt-get install python3-pip
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Install pipenv&lt;/p&gt;&lt;pre&gt;&lt;code&gt;pip3 install pipenv&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Install virtualenv&lt;/p&gt;&lt;pre&gt;&lt;code&gt;pip3 install virtualenv&lt;/code&gt;&lt;/pre&gt;</content:encoded></item><item><title>Invoice recognition</title><description>&lt;p&gt;Google Vision&lt;br&gt;
&lt;a href="https://www.linkedin.com/pulse/google-vision-api-receipt-ocr-denny-muktar"&gt;https://www.linkedin.com/pulse/google-vision-api-receipt-ocr-denny-muktar&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;OCR library&lt;br&gt;
&lt;a href="https://asprise.com/royalty-free-library/java-ocr-barcode-reader-sdk-samples-docs.html"&gt;https://asprise.com/royalty-free-library/java-ocr-barcode-reader-sdk-samples-docs.html&lt;/a&gt;&lt;/p&gt;</description><link>http://localhost:2368/invoice-recognition/</link><guid isPermaLink="false">5bf5e8b7b7b9b605c6486e17</guid><dc:creator>Michał Łapacz</dc:creator><pubDate>Thu, 23 Aug 2018 04:05:19 GMT</pubDate><content:encoded>&lt;p&gt;Google Vision&lt;br&gt;
&lt;a href="https://www.linkedin.com/pulse/google-vision-api-receipt-ocr-denny-muktar"&gt;https://www.linkedin.com/pulse/google-vision-api-receipt-ocr-denny-muktar&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;OCR library&lt;br&gt;
&lt;a href="https://asprise.com/royalty-free-library/java-ocr-barcode-reader-sdk-samples-docs.html"&gt;https://asprise.com/royalty-free-library/java-ocr-barcode-reader-sdk-samples-docs.html&lt;/a&gt;&lt;/p&gt;
</content:encoded></item><item><title>Minecraft server</title><description>&lt;p&gt;&lt;a href="https://www.godaddy.com/garage/how-to-make-a-minecraft-server/"&gt;https://www.godaddy.com/garage/how-to-make-a-minecraft-server/&lt;/a&gt;&lt;/p&gt;</description><link>http://localhost:2368/minecraft-server/</link><guid isPermaLink="false">5bf5e8b7b7b9b605c6486e16</guid><dc:creator>Michał Łapacz</dc:creator><pubDate>Thu, 12 Jul 2018 07:27:00 GMT</pubDate><content:encoded>&lt;p&gt;&lt;a href="https://www.godaddy.com/garage/how-to-make-a-minecraft-server/"&gt;https://www.godaddy.com/garage/how-to-make-a-minecraft-server/&lt;/a&gt;&lt;/p&gt;
</content:encoded></item><item><title>Distributed Transactions with Spring</title><description>&lt;p&gt;&lt;a href="https://bitbucket.org/catchers/atomikos-distributed-transactions/src/master/"&gt;https://bitbucket.org/catchers/atomikos-distributed-transactions/src/master/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;AppConfig.java&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-java"&gt;package org.catcher.sandbox.learningspring.config;

import javax.sql.DataSource;

import org.springframework.boot.context.properties.ConfigurationProperties;
import org.springframework.boot.jta.atomikos.AtomikosDataSourceBean;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.&lt;/code&gt;&lt;/pre&gt;</description><link>http://localhost:2368/distributed-transactions-with-spring/</link><guid isPermaLink="false">5bf5e8b7b7b9b605c6486e15</guid><category>spring</category><dc:creator>Michał Łapacz</dc:creator><pubDate>Thu, 12 Apr 2018 19:23:26 GMT</pubDate><content:encoded>&lt;p&gt;&lt;a href="https://bitbucket.org/catchers/atomikos-distributed-transactions/src/master/"&gt;https://bitbucket.org/catchers/atomikos-distributed-transactions/src/master/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;AppConfig.java&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-java"&gt;package org.catcher.sandbox.learningspring.config;

import javax.sql.DataSource;

import org.springframework.boot.context.properties.ConfigurationProperties;
import org.springframework.boot.jta.atomikos.AtomikosDataSourceBean;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Primary;
import org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations;
import org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate;
import org.springframework.transaction.annotation.EnableTransactionManagement;

@Configuration
@EnableTransactionManagement
public class AppConfig {

	@Bean
	@Primary
	@ConfigurationProperties(&amp;quot;sms.datasource&amp;quot;)
	DataSource createPostgresSqlDataSource() {
		return new AtomikosDataSourceBean();
	}

	@Bean
	@ConfigurationProperties(&amp;quot;complaint.datasource&amp;quot;)
	DataSource createMySqlDataSource() {
		return new AtomikosDataSourceBean();
	}

	@Bean
	NamedParameterJdbcOperations smsJdbcTemplate() {
		return new NamedParameterJdbcTemplate(createPostgresSqlDataSource());
	}

	@Bean
	NamedParameterJdbcOperations complaintJdbcTemplate() {
		return new NamedParameterJdbcTemplate(createMySqlDataSource());
	}
}
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class="language-java"&gt;package org.catcher.sandbox.learningspring.controller;

import org.catcher.sandbox.learningspring.service.ComplaintService;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

@RestController
public class ComplaintController {

	private static final Logger logger = LoggerFactory.getLogger(ComplaintController.class);

	private final ComplaintService complaintService;

	public ComplaintController(ComplaintService complaintService) {
		this.complaintService = complaintService;
	}

	@RequestMapping(&amp;quot;/complaint&amp;quot;)
	public String createComplaint(@RequestParam String firstName, @RequestParam String lastName,
			@RequestParam String complaint, @RequestParam String phoneNumber) {
		logger.info(&amp;quot;Complaint creation entered FirstName: {}, LastName: {}, Complaint: {}, PhoneNumber: {}&amp;quot;, firstName,
				lastName, complaint, phoneNumber);
		complaintService.newComplaint(firstName, lastName, complaint, phoneNumber);
		return &amp;quot;OK&amp;quot;;
	}
}
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class="language-java"&gt;package org.catcher.sandbox.learningspring.repository;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.jdbc.core.namedparam.MapSqlParameterSource;
import org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations;
import org.springframework.stereotype.Repository;

@Repository
public class ComplaintRepositoryImpl implements ComplaintRepository {

	private static final Logger logger = LoggerFactory.getLogger(ComplaintRepositoryImpl.class);

	private final NamedParameterJdbcOperations complaintJdbcTemplate;

	public ComplaintRepositoryImpl(NamedParameterJdbcOperations complaintJdbcTemplate) {
		this.complaintJdbcTemplate = complaintJdbcTemplate;
	}

	@Override
	public void storeData(String firstName, String lastName, String complaint) {
		logger.info(&amp;quot;Storing Complaint Data, First Name: {}, Last Name: {}, Complaint {}&amp;quot;, firstName, lastName,
				complaint);
		final String sql = &amp;quot;insert into complaint(firstname, lastname, complaint) values (:firstName, :lastName, :complaint)&amp;quot;;
		MapSqlParameterSource paramSource = new MapSqlParameterSource(&amp;quot;firstName&amp;quot;, firstName);
		paramSource.addValue(&amp;quot;lastName&amp;quot;, lastName);
		paramSource.addValue(&amp;quot;complaint&amp;quot;, complaint);
		complaintJdbcTemplate.update(sql, paramSource);

		//throw new RuntimeException(); // Uncomment this line to verify distributed transactions
	}

}
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class="language-java"&gt;package org.catcher.sandbox.learningspring.repository;

import java.util.Date;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.jdbc.core.namedparam.MapSqlParameterSource;
import org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations;
import org.springframework.stereotype.Repository;

@Repository
public class SmsRepositoryImpl implements SmsRepository {

	private static final Logger logger = LoggerFactory.getLogger(SmsRepositoryImpl.class);

	private final NamedParameterJdbcOperations smsJdbcTemplate;

	SmsRepositoryImpl(NamedParameterJdbcOperations smsJdbcTemplate) {
		this.smsJdbcTemplate = smsJdbcTemplate;
	}

	@Override
	public void storeSMS(String phoneNumber, String smsText) {
		logger.info(&amp;quot;Storing SMS Data, Phone: {}, Text: {}&amp;quot;, phoneNumber, smsText);
		final String sql = &amp;quot;insert into sms(sms_text, phone_number, insert_date) values (:smsText, :phoneNumber, :insertDate)&amp;quot;;
		MapSqlParameterSource paramSource = new MapSqlParameterSource(&amp;quot;smsText&amp;quot;, smsText);
		paramSource.addValue(&amp;quot;phoneNumber&amp;quot;, phoneNumber);
		paramSource.addValue(&amp;quot;insertDate&amp;quot;, new Date());
		smsJdbcTemplate.update(sql, paramSource);
	}

}
&lt;/code&gt;&lt;/pre&gt;
</content:encoded></item><item><title>(Java) Singleton vs. static</title><description>&lt;h3 id="whentousestaticclassinplaceofsingletoninjava"&gt;When to use Static Class in place of Singleton in Java&lt;/h3&gt;
&lt;p&gt;Indeed there are some situations, where static classes makes sense than Singleton. Prime example of this is java.lang.Math which is not Singleton, instead a class with all static methods. Here are few situation where I think using&lt;/p&gt;</description><link>http://localhost:2368/java-singleton-vs-static/</link><guid isPermaLink="false">5bf5e8b7b7b9b605c6486e14</guid><category>Java</category><category>patterns</category><dc:creator>Michał Łapacz</dc:creator><pubDate>Tue, 27 Mar 2018 09:38:00 GMT</pubDate><content:encoded>&lt;h3 id="whentousestaticclassinplaceofsingletoninjava"&gt;When to use Static Class in place of Singleton in Java&lt;/h3&gt;
&lt;p&gt;Indeed there are some situations, where static classes makes sense than Singleton. Prime example of this is java.lang.Math which is not Singleton, instead a class with all static methods. Here are few situation where I think using static class over Singleton pattern make sense:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;If your Singleton is not maintaining any state, and just providing global access to methods, than consider using static class, as static methods are much faster than Singleton, because of static binding during compile time. But remember its not advised to maintain state inside static class, especially in concurrent environment, where it could lead subtle race conditions when modified parallel by multiple threads without adequate synchronization.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;You can also choose to use static method, if you need to combine bunch of utility method together. Anything else, which requires singles access to some resource, should use Singleton design pattern.&lt;/p&gt;
&lt;h3 id="differencebetweensingletonvsstaticinjava"&gt;Difference between Singleton vs Static in Java&lt;/h3&gt;
&lt;p&gt;This is answer of our second interview question about Singleton over static. As I said earlier, fundamental difference between them is, one represent object while other represent a method. Here are few more differences between static and singleton in Java.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Static class provides better performance than Singleton pattern, because static methods are bonded on compile time.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;One more difference between Singleton and static is, ability to override. Since static methods in Java cannot be overridden, they leads to inflexibility. On the other hand, you can override methods defined in Singleton class by extending it.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Static classes are hard to mock and consequently hard to test than Singletons, which are pretty easy to mock and thus easy to test. It’s easier to write JUnit test for Singleton than static classes, because you can pass mock object whenever Singleton is expected, e.g. into constructor or as method arguments.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If your requirements needs to maintain state than Singleton pattern is better choice than static class, because&lt;br&gt;
maintaining  state in later case is nightmare and leads to subtle bugs.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Singleton classes can be lazy loaded if its an heavy object, but static class doesn't have such advantages and always eagerly loaded.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Many Dependency Injection framework manages Singleton quite well e.g. Spring, which makes using them very easy.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;These are some differences between static class and singleton pattern, this will help to decide between two, which situation arises. In next section we will when to choose Singleton pattern over static class in Java.&lt;/p&gt;
&lt;h3 id="advantageofsingletonpatternoverstaticclassinjava"&gt;Advantage of Singleton Pattern over Static Class in Java&lt;/h3&gt;
&lt;p&gt;Main advantage of Singleton over static is that former is more object oriented than later. With Singleton, you can use Inheritance and Polymorphism to extend a base class, implement an interface and capable of providing different implementations. If we talk about java.lang.Runtime, which is a Singleton in Java, call to getRuntime() method return different implementations based on different JVM, but guarantees only one instance per JVM, had java.lang.Runtime an static class, it’s not possible to return different implementation for different JVM.&lt;/p&gt;
&lt;p&gt;That’s all on difference between Singleton and static class in Java. When you need a class with full OO capability , chose Singleton, while if you just need to store bunch of static methods together, than use static class.&lt;/p&gt;
&lt;p&gt;Read more: &lt;a href="http://javarevisited.blogspot.com/2013/03/difference-between-singleton-pattern-vs-static-class-java.html#ixzz5AwHJZAic"&gt;http://javarevisited.blogspot.com/2013/03/difference-between-singleton-pattern-vs-static-class-java.html#ixzz5AwHJZAic&lt;/a&gt;&lt;/p&gt;
</content:encoded></item><item><title>How to update Ubuntu launcher programs</title><description>&lt;pre&gt;&lt;code&gt;nano ~/.local/share/applications/jetbrains-idea-ce.desktop
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and update file:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[Desktop Entry]
Version=1.0
Type=Application
Name=IntelliJ IDEA Community Edition
Icon=/opt/idea-IC-171.4694.70/bin/idea.png
Exec=&amp;quot;/opt/idea-IC-171.4694.70/bin/idea.sh&amp;quot; %f
Comment=The Drive to Develop
Categories=Development;IDE;
Terminal=false&lt;/code&gt;&lt;/pre&gt;</description><link>http://localhost:2368/how-to-update-ubuntu-launcher/</link><guid isPermaLink="false">5bf5e8b7b7b9b605c6486e13</guid><category>Ubuntu</category><dc:creator>Michał Łapacz</dc:creator><pubDate>Mon, 12 Mar 2018 22:01:20 GMT</pubDate><content:encoded>&lt;pre&gt;&lt;code&gt;nano ~/.local/share/applications/jetbrains-idea-ce.desktop
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and update file:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[Desktop Entry]
Version=1.0
Type=Application
Name=IntelliJ IDEA Community Edition
Icon=/opt/idea-IC-171.4694.70/bin/idea.png
Exec=&amp;quot;/opt/idea-IC-171.4694.70/bin/idea.sh&amp;quot; %f
Comment=The Drive to Develop
Categories=Development;IDE;
Terminal=false
StartupWMClass=jetbrains-idea-ce
&lt;/code&gt;&lt;/pre&gt;
</content:encoded></item><item><title>RPM with MAVEN</title><description>&lt;p&gt;Source: &lt;a href="https://rombertw.wordpress.com/2010/05/20/maven-recipe-delivering-applications-as-rpms/"&gt;https://rombertw.wordpress.com/2010/05/20/maven-recipe-delivering-applications-as-rpms/&lt;/a&gt;&lt;/p&gt;</description><link>http://localhost:2368/rpm-with-maven/</link><guid isPermaLink="false">5bf5e8b7b7b9b605c6486e12</guid><category>maven</category><category>rpm</category><dc:creator>Michał Łapacz</dc:creator><pubDate>Fri, 09 Mar 2018 10:39:56 GMT</pubDate><content:encoded>&lt;p&gt;Source: &lt;a href="https://rombertw.wordpress.com/2010/05/20/maven-recipe-delivering-applications-as-rpms/"&gt;https://rombertw.wordpress.com/2010/05/20/maven-recipe-delivering-applications-as-rpms/&lt;/a&gt;&lt;/p&gt;
</content:encoded></item><item><title>NVM (Node.js) on Ubuntu</title><description>&lt;h4 id="installationofnvm"&gt;Installation of NVM&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;sudo apt-get update
sudo apt-get install build-essential libssl-dev
curl -sL https://raw.githubusercontent.com/creationix/nvm/v0.33.8/install.sh -o install_nvm.sh
bash install_nvm.sh
source ~/.profile
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id="listingremotenodejsversions"&gt;Listing remote node.js versions:&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;nvm ls-remote
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id="ifyouhavemultiplenodejsversionsyoucanseewhatisinstalledbytyping"&gt;If you have multiple Node.js versions, you can&lt;/h4&gt;</description><link>http://localhost:2368/nvm-node-js-on-ubuntu/</link><guid isPermaLink="false">5bf5e8b7b7b9b605c6486e11</guid><category>nodejs</category><dc:creator>Michał Łapacz</dc:creator><pubDate>Thu, 08 Mar 2018 15:17:39 GMT</pubDate><content:encoded>&lt;h4 id="installationofnvm"&gt;Installation of NVM&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;sudo apt-get update
sudo apt-get install build-essential libssl-dev
curl -sL https://raw.githubusercontent.com/creationix/nvm/v0.33.8/install.sh -o install_nvm.sh
bash install_nvm.sh
source ~/.profile
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id="listingremotenodejsversions"&gt;Listing remote node.js versions:&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;nvm ls-remote
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id="ifyouhavemultiplenodejsversionsyoucanseewhatisinstalledbytyping"&gt;If you have multiple Node.js versions, you can see what is installed by typing:&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;nvm ls
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id="toinstallspecificnodejsversiontype"&gt;To install specific node.js version type:&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;nvm install 8.9.4
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id="usuallynvmwillswitchtousethemostrecentlyinstalledversionyoucanexplicitlytellnvmtousespecificversion"&gt;Usually, nvm will switch to use the most recently installed version. You can explicitly tell nvm to use specific version:&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;nvm use 8.9.4
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Source: &lt;a href="https://www.digitalocean.com/community/tutorials/how-to-install-node-js-on-ubuntu-16-04"&gt;https://www.digitalocean.com/community/tutorials/how-to-install-node-js-on-ubuntu-16-04&lt;/a&gt;&lt;/p&gt;
</content:encoded></item><item><title>OpenStack</title><description>&lt;h3 id="runstack"&gt;Run stack&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;su - stack
# passwod: stack
cd ~/devstack
./stack.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="unstack"&gt;Unstack&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;su - stack
# passwod: stack
cd ~/devstack
./unstack.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Source: &lt;a href="https://docs.openstack.org/devstack/latest/"&gt;https://docs.openstack.org/devstack/latest/&lt;/a&gt;&lt;/p&gt;</description><link>http://localhost:2368/openstack/</link><guid isPermaLink="false">5bf5e8b7b7b9b605c6486e10</guid><dc:creator>Michał Łapacz</dc:creator><pubDate>Wed, 07 Mar 2018 14:15:51 GMT</pubDate><content:encoded>&lt;h3 id="runstack"&gt;Run stack&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;su - stack
# passwod: stack
cd ~/devstack
./stack.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="unstack"&gt;Unstack&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;su - stack
# passwod: stack
cd ~/devstack
./unstack.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Source: &lt;a href="https://docs.openstack.org/devstack/latest/"&gt;https://docs.openstack.org/devstack/latest/&lt;/a&gt;&lt;/p&gt;
</content:encoded></item><item><title>NGINX + GHOST + JENKINS etc.</title><description>&lt;p&gt;docker-compose.yml&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-yaml"&gt;version: &amp;quot;2&amp;quot;
services:
  nginx:
    image: nginx
    container_name: nginx
    restart: always
    links:
      - ghost
      - jenkins
    ports:
      - &amp;quot;80:80&amp;quot;
    volumes:
      - /home/debian/nginx:/etc/nginx

  ghost:
    image: ghost:1.19
    container_name: ghost
    restart: always
    expose:
      - &amp;quot;2368&amp;quot;
    environment:
      -&lt;/code&gt;&lt;/pre&gt;</description><link>http://localhost:2368/nginx-ghost-jenkins-etc/</link><guid isPermaLink="false">5bf5e8b7b7b9b605c6486e0f</guid><category>Docker</category><dc:creator>Michał Łapacz</dc:creator><pubDate>Thu, 01 Feb 2018 21:27:56 GMT</pubDate><content:encoded>&lt;p&gt;docker-compose.yml&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-yaml"&gt;version: &amp;quot;2&amp;quot;
services:
  nginx:
    image: nginx
    container_name: nginx
    restart: always
    links:
      - ghost
      - jenkins
    ports:
      - &amp;quot;80:80&amp;quot;
    volumes:
      - /home/debian/nginx:/etc/nginx

  ghost:
    image: ghost:1.19
    container_name: ghost
    restart: always
    expose:
      - &amp;quot;2368&amp;quot;
    environment:
      - url=http://blog.wapacz.nazwa.pl/
    volumes:
      - /home/debian/ghost/ghost-blog-dump:/var/lib/ghost/content

  jenkins:
    image: jenkins
    container_name: jenkins
    restart: always
    expose:
      - &amp;quot;8080&amp;quot;
      - &amp;quot;50000&amp;quot;
    volumes:
      - /home/debian/jenkins:/var/jenkins_home
&lt;/code&gt;&lt;/pre&gt;
</content:encoded></item><item><title>JVM Troubleshooting</title><description>&lt;h3 id="hotspotgarbagecollectors"&gt;HotSpot Garbage Collectors&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Young Generation&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Serial&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;is a stop-the-world&lt;/li&gt;
&lt;li&gt;copying collector that uses a single GC thread&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ParNew&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;is a stop-the-world&lt;/li&gt;
&lt;li&gt;copying collector that uses multiple GC threads&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ParallelScavenge&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;is a stop-the-world&lt;/li&gt;
&lt;li&gt;copying collector that uses multiple GC threads&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Old Generation&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Serial Old&lt;/strong&gt; (Mark Sweep Compact)
&lt;ul&gt;
&lt;li&gt;is a stop-the-world&lt;/li&gt;
&lt;li&gt;mark-sweep-compact&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</description><link>http://localhost:2368/jvm/</link><guid isPermaLink="false">5bf5e8b7b7b9b605c6486e0e</guid><dc:creator>Michał Łapacz</dc:creator><pubDate>Mon, 29 Jan 2018 11:00:13 GMT</pubDate><content:encoded>&lt;h3 id="hotspotgarbagecollectors"&gt;HotSpot Garbage Collectors&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Young Generation&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Serial&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;is a stop-the-world&lt;/li&gt;
&lt;li&gt;copying collector that uses a single GC thread&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ParNew&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;is a stop-the-world&lt;/li&gt;
&lt;li&gt;copying collector that uses multiple GC threads&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ParallelScavenge&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;is a stop-the-world&lt;/li&gt;
&lt;li&gt;copying collector that uses multiple GC threads&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Old Generation&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Serial Old&lt;/strong&gt; (Mark Sweep Compact)
&lt;ul&gt;
&lt;li&gt;is a stop-the-world&lt;/li&gt;
&lt;li&gt;mark-sweep-compact collector that uses a single GC thread&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;CMS&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;is a mostly concurrent&lt;/li&gt;
&lt;li&gt;low-pause collector&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Parellel Old&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;is a compacting collector that uses multiple GC threads&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Both&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;G1&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;is the Garbage First collector for large heaps&lt;/li&gt;
&lt;li&gt;provides reliable short GC pauses&lt;/li&gt;
&lt;li&gt;has generations but uses different memory layout&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="howtoenablethecollectors"&gt;How to enable the Collectors&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;UseSerialGC&lt;/strong&gt; : Serial + Serial Old&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;UseParNewGC&lt;/strong&gt; : ParNew + Serial Old&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;UseConcMarkSweepGC&lt;/strong&gt; : ParNew + CMS + Serial Old.
&lt;ul&gt;
&lt;li&gt;CMS is used most of the time to collect the old generation. Serial Old is used when a concurrent mode failure occurs.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;UseParallelGC&lt;/strong&gt; : Parallel Scavenge + Parallel Old&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;UseG1GC&lt;/strong&gt; : G1 GC for both generations&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="collectors"&gt;Collectors&lt;/h3&gt;
&lt;h5 id="marksweepcompactcollector"&gt;Mark-Sweep-Compact Collector&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;-XX:+UseSerialGC&lt;/strong&gt; or &lt;strong&gt;–XX:+UseParNewGC&lt;/strong&gt; selects Serial Old collector for old generation&lt;/li&gt;
&lt;li&gt;Stop-the-world old generation collector.&lt;/li&gt;
&lt;li&gt;Old is collected using mark-sweep-compact.&lt;/li&gt;
&lt;li&gt;Mark phase: marks all live objects.&lt;/li&gt;
&lt;li&gt;Sweep phase: sweeps over the heap identifying garbage.&lt;/li&gt;
&lt;li&gt;Slide phase: the GC performs a sliding compaction, sliding the live objects towards the start of the Heap.&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id="parallelcollector"&gt;Parallel Collector&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;-XX:+UseParallelGC
&lt;ul&gt;
&lt;li&gt;Young Generation collected with Parallel Scavenge&lt;/li&gt;
&lt;li&gt;Old Generation collected with Parallel collector&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;It is also called the throughput collector&lt;/li&gt;
&lt;li&gt;Stop-the-world collections&lt;/li&gt;
&lt;li&gt;Default on Server type machines up until JDK 9&lt;/li&gt;
&lt;li&gt;Collection is performed in parallel on multiple cores&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id="concurrentmarksweepcollectorcms"&gt;Concurrent Mark Sweep Collector (CMS)&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;-XX:+UseConcMarkSweepGC
&lt;ul&gt;
&lt;li&gt;Young gen – ParNew collector&lt;/li&gt;
&lt;li&gt;Old gen – CMS collector&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Low-latency collector, Mostly concurrent&lt;/li&gt;
&lt;li&gt;No heap compaction – fragmentation&lt;/li&gt;
&lt;li&gt;Free lists link unallocated regions&lt;/li&gt;
&lt;li&gt;Allocations expensive as compared to bump-the-pointer allocations&lt;/li&gt;
&lt;li&gt;Additional overhead on young collections&lt;/li&gt;
&lt;li&gt;Larger heap size requirement and floating garbage&lt;/li&gt;
&lt;li&gt;Deprecated in Java 9&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id="g1collector"&gt;G1 Collector&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;Server-style garbage collector, targeted for multi-processor machines with large memories&lt;/li&gt;
&lt;li&gt;Meets garbage collection (GC) pause time goals with a high probability, while achieving high throughput.&lt;/li&gt;
&lt;li&gt;Better GC ergonomics&lt;/li&gt;
&lt;li&gt;Low pauses without fragmentation&lt;/li&gt;
&lt;li&gt;Parallelism and concurrency in collections&lt;/li&gt;
&lt;li&gt;G1 is a compacting collector.&lt;/li&gt;
&lt;li&gt;Fully supported in Oracle JDK 7 update 4 and later releases&lt;/li&gt;
&lt;li&gt;Default collector in JDK 9&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="references"&gt;References&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.oracle.com/javase/9/gctuning/toc.htm"&gt;GC Tuning Guide&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content:encoded></item><item><title>Angular 2/4 &amp; Visual Studio Code</title><description>&lt;p&gt;Extensions for Angular in Code:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;angular-cli&lt;/li&gt;
&lt;li&gt;angular v4 snippet (or v5)&lt;/li&gt;
&lt;li&gt;Debugger for Chrome&lt;/li&gt;
&lt;li&gt;TSLint&lt;/li&gt;
&lt;li&gt;TypeScript Importer&lt;/li&gt;
&lt;/ul&gt;</description><link>http://localhost:2368/angular-2-4-visual-studio-code/</link><guid isPermaLink="false">5bf5e8b7b7b9b605c6486e0d</guid><category>Angular</category><category>web</category><category>JavaScript</category><dc:creator>Michał Łapacz</dc:creator><pubDate>Fri, 26 Jan 2018 08:56:31 GMT</pubDate><content:encoded>&lt;p&gt;Extensions for Angular in Code:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;angular-cli&lt;/li&gt;
&lt;li&gt;angular v4 snippet (or v5)&lt;/li&gt;
&lt;li&gt;Debugger for Chrome&lt;/li&gt;
&lt;li&gt;TSLint&lt;/li&gt;
&lt;li&gt;TypeScript Importer&lt;/li&gt;
&lt;/ul&gt;
</content:encoded></item><item><title>Angular 2/4 &amp; Bootstrap</title><description>&lt;p&gt;First need to install Boostrap, jQuery and ng-bootstrap with:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  npm install bootstrap jquery @ng-bootstrap/ng-bootstrap --save
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Next add Boostrap and jQuery file paths to angular-cli.json:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  &amp;quot;styles&amp;quot;: [
    &amp;quot;styles.css&amp;quot;,
    &amp;quot;../node_modules/bootstrap/dist/css/bootstrap.min.css&amp;quot;
  ],
  &amp;quot;scripts&amp;quot;: [
    &amp;quot;../node_modules/jquery/&lt;/code&gt;&lt;/pre&gt;</description><link>http://localhost:2368/angular-2-4-bootstrap/</link><guid isPermaLink="false">5bf5e8b7b7b9b605c6486e0c</guid><category>Angular</category><category>JavaScript</category><category>web</category><dc:creator>Michał Łapacz</dc:creator><pubDate>Fri, 26 Jan 2018 08:18:49 GMT</pubDate><content:encoded>&lt;p&gt;First need to install Boostrap, jQuery and ng-bootstrap with:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  npm install bootstrap jquery @ng-bootstrap/ng-bootstrap --save
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Next add Boostrap and jQuery file paths to angular-cli.json:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  &amp;quot;styles&amp;quot;: [
    &amp;quot;styles.css&amp;quot;,
    &amp;quot;../node_modules/bootstrap/dist/css/bootstrap.min.css&amp;quot;
  ],
  &amp;quot;scripts&amp;quot;: [
    &amp;quot;../node_modules/jquery/dist/jquery.min.js&amp;quot;,
    &amp;quot;../node_modules/bootstrap/dist/js/bootstrap.min.js&amp;quot;
  ],
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And import of this component to app.module.ts:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;import { NgbModule } from '@ng-bootstrap/ng-bootstrap';
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Next, we need to add this module to the imports array of the @NgModule decorator. If you want to import NgbModule in your root module (e.g. AppModule) you need to call the forRoot() factory method, as you can see in the following:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;@NgModule({
  declarations: [AppComponent, ...],
  imports: [NgbModule.forRoot(), ...],
  bootstrap: [AppComponent]
})
export class AppModule {
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you want to import NgbModule in other modules (child modules of your root application module) you need to add it without calling the forRoot() method:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;@NgModule({
  declarations: [OtherComponent, ...],
  imports: [NgbModule, ...]
})
export class OtherModule {
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Let’s try it out and use some of these components in app.component.html:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-html"&gt;&amp;lt;div class=&amp;quot;container&amp;quot;&amp;gt;
  &amp;lt;ngb-tabset&amp;gt;
    &amp;lt;ngb-tab title=&amp;quot;Simple&amp;quot;&amp;gt;
      &amp;lt;template ngbTabContent&amp;gt;
        &amp;lt;p&amp;gt;This is the content of the first tab!&amp;lt;/p&amp;gt;
        &amp;lt;ngb-alert [dismissible]=&amp;quot;false&amp;quot;&amp;gt;
          &amp;lt;strong&amp;gt;Warning!&amp;lt;/strong&amp;gt; This is an alert!
        &amp;lt;/ngb-alert&amp;gt;
      &amp;lt;/template&amp;gt;
    &amp;lt;/ngb-tab&amp;gt;
    &amp;lt;ngb-tab&amp;gt;
      &amp;lt;template ngbTabTitle&amp;gt;&amp;lt;b&amp;gt;Fancy&amp;lt;/b&amp;gt; title&amp;lt;/template&amp;gt;
      &amp;lt;template ngbTabContent&amp;gt;
        &amp;lt;p&amp;gt;This is the content of the second tab!&amp;lt;/p&amp;gt;
        &amp;lt;p&amp;gt;&amp;lt;ngb-progressbar type=&amp;quot;success&amp;quot; [value]=&amp;quot;25&amp;quot;&amp;gt;&amp;lt;/ngb-progressbar&amp;gt;&amp;lt;/p&amp;gt;
        &amp;lt;p&amp;gt;&amp;lt;ngb-progressbar type=&amp;quot;info&amp;quot; [value]=&amp;quot;50&amp;quot;&amp;gt;&amp;lt;/ngb-progressbar&amp;gt;&amp;lt;/p&amp;gt;
        &amp;lt;p&amp;gt;&amp;lt;ngb-progressbar type=&amp;quot;warning&amp;quot; [value]=&amp;quot;75&amp;quot;&amp;gt;&amp;lt;/ngb-progressbar&amp;gt;&amp;lt;/p&amp;gt;
        &amp;lt;p&amp;gt;&amp;lt;ngb-progressbar type=&amp;quot;danger&amp;quot; [value]=&amp;quot;100&amp;quot;&amp;gt;&amp;lt;/ngb-progressbar&amp;gt;&amp;lt;/p&amp;gt;
      &amp;lt;/template&amp;gt;
    &amp;lt;/ngb-tab&amp;gt;
    &amp;lt;ngb-tab title=&amp;quot;Disabled&amp;quot; [disabled]=&amp;quot;true&amp;quot;&amp;gt;
      &amp;lt;template ngbTabContent&amp;gt;
        &amp;lt;p&amp;gt;This tab is disabled&amp;lt;/p&amp;gt;
      &amp;lt;/template&amp;gt;
    &amp;lt;/ngb-tab&amp;gt;
  &amp;lt;/ngb-tabset&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
</content:encoded></item><item><title>Dynamic injection in CDI</title><description>&lt;p&gt;Create EnvironmentType enum:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-java"&gt;public enum EnvironmentType { VAPP, PHYSICAL, CLOUD }
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;then create qualifier:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-java"&gt;@Qualifier
@Retention(RetentionPolicy.RUNTIME)
@Target({ElementType.FIELD, ElementType.TYPE})
public @interface EnvironmentQualifier {
    EnvironmentType value();
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;... next create abstract class or interface Environment:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-java"&gt;public interface Environment {
    Machine getMachine(String name);
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;then create EnvironmentLiteral to be able to select environment with&lt;/p&gt;</description><link>http://localhost:2368/dynamic-injection-in-cdi/</link><guid isPermaLink="false">5bf5e8b7b7b9b605c6486e0b</guid><category>Java</category><category>CDI</category><category>JEE</category><dc:creator>Michał Łapacz</dc:creator><pubDate>Fri, 19 Jan 2018 21:21:49 GMT</pubDate><content:encoded>&lt;p&gt;Create EnvironmentType enum:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-java"&gt;public enum EnvironmentType { VAPP, PHYSICAL, CLOUD }
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;then create qualifier:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-java"&gt;@Qualifier
@Retention(RetentionPolicy.RUNTIME)
@Target({ElementType.FIELD, ElementType.TYPE})
public @interface EnvironmentQualifier {
    EnvironmentType value();
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;... next create abstract class or interface Environment:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-java"&gt;public interface Environment {
    Machine getMachine(String name);
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;then create EnvironmentLiteral to be able to select environment with string&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-java"&gt;public class EnvironmentLiteral extends AnnotationLiteral&amp;lt;EnvironmentQualifier&amp;gt; implements EnvironmentQualifier {

    private EnvironmentType type;

    public EnvironmentLiteral(EnvironmentType type) {
        this.type = type;
    }

    @Override
    public EnvironmentType value() {
        return type;
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;... create EnvironmentFactory&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-java"&gt;public class EnvironmentFactory {

    @Inject
    @Any
    private Instance&amp;lt;Environment&amp;gt; environments;

    public Environment getEnvironment(EnvironmentType environmentType) {
        EnvironmentLiteral qualifier = new EnvironmentLiteral(environmentType);
        return environments.select(qualifier).get();
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and finally crate some implementations of Environment interface:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-java"&gt;@EnvironmentQualifier(EnvironmentType.PHYSICAL)
public class PhysicalEnvironment implements Environment {
    @Override
    public Machine getMachine(String name) {
        ...
        return new Machine(name);
    }
}
&lt;/code&gt;&lt;/pre&gt;
</content:encoded></item></channel></rss>